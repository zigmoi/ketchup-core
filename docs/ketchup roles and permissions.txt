Overview:
--------------------------------------------------------------
tenant operations (crud, list-all)			       : ROLE_SUPER_ADMIN required.
current tenant operations (disable, delete tenant) : ROLE_TENANT_ADMIN required.
user operations (crud, list-all, assign roles)	   : ROLE_TENANT_ADMIN or ROLE_USER_ADMIN  required.
read/list users (details/roles) 				   : ROLE_TENANT_ADMIN or ROLE_USER_ADMIN or ROLE_USER_READER required.

manage project operations: 	  permissions (project permissions required for specific project and for specific operation on that project.)
manage project settings:   	  permissions (project permissions required for specific project and for specific operation on that project.)
manage project members:    	  permissions (project permissions required for specific project and for specific operation on that project.)
manage deployment:         	  permissions (project permissions required for specific project and for specific operation on that project.)


ROLE_SUPER_ADMIN:
--------------------------------------------------------------
can create, disable, delete tenants.
cannot perform any other operations.

admin@zigmoi.com has this role by default, no other user can have this role or can be assigned this role.
ROLE_SUPER_ADMIN (@zigmoi.com) is allowed cross tenant operation to create tenants.
hence its not allowed any other operations (manage users, projects etc) apart from tenant operations.
so no users can be added in tenant "@zigmoi.com" and no other operations are allowed.
ROLE_SUPER_ADMIN role cannot be assigned to any user.


ROLE_TENANT_ADMIN:
--------------------------------------------------------------
default user (admin@tenant_name) created in each tenant will have a special role called ROLE_TENANT_ADMIN.
ROLE_TENANT_ADMIN should be able to perform all operations in that tenant. (by allowing in code or by assigning roles and permissions.)
ROLE_TENANT_ADMIN is identifier to know this is top level admin in a particular tenant.
more than one such user can be created or assigned this role.

can disable and delete current tenant.
can create, update, delete, read, enable/disable, list all users, list all user roles of all users of any role.
can assign/revoke any role to/from any user.

roles assigned to user having ROLE_TENANT_ADMIN cannot be assigned/revoked unless assigning/revoking operation is performed by user which has ROLE_TENANT_ADMIN.
permissions assigned to user having ROLE_TENANT_ADMIN cannot be assigned/revoked unless assigning/revoking operation is performed by user which has ROLE_TENANT_ADMIN.

default user (admin@tenant_name) in each tenant will have all permissions on all resources and all roles assigned.
ROLE_TENANT_ADMIN can manage users directly and hence doesn't requires ROLE_USER_ADMIN or ROLE_USER_READER to manage them.
In future if new role is introduced either ROLE_TENANT_ADMIN should have it assigned from ui or in code checks should be introduced to allow those operations.
ROLE_TENANT_ADMIN can manage resources (projects, deployments etc) but in code checks are not present directly and hence requires all permissions on all resources assigned from ui to manage them.


ROLE_USER_ADMIN:
--------------------------------------------------------------
can read, list all users, list all user roles, of all users of any role.
can create, update, delete, enable/disable users of roles ROLE_USER_ADMIN, ROLE_USER_READER and ROLE_USER.
can assign/revoke role ROLE_USER_ADMIN, ROLE_USER_READER and ROLE_USER to other users.

cannot create, update, delete, enable/disable users of role ROLE_TENANT_ADMIN.
cannot assign/revoke role ROLE_TENANT_ADMIN to any user.
cannot add user as member in any project.
cannot read members of any project.
cannot check/list/assign/revoke any permission of any user in any project.


ROLE_USER_READER:
--------------------------------------------------------------
can read, list details and roles of all users.
cannot assign role ROLE_USER_READER to other users. (only ROLE_TENANT_ADMIN, ROLE_USER_ADMIN can assign roles.)
cannot add user as member in any project.
cannot read members of any project.
cannot check/list/assign/revoke any permission of any user in any project.


ROLE_USER:
--------------------------------------------------------------
This is default role which every user will have.
cannot assign role ROLE_USER to other users.
cannot do any operations just a default role.


Note: "that" project/resource refers to project for which user has permissions assigned for.
Example: if user has read project permission on project p1, than "that" project refers to p1.

Permissions:
--------------------------------------------------------------
create-project:
	 can create new projects but cannot create anything inside those projects unless update permission is given.
	 allows to create new projects. (create permissions are not resource specific and are applied to all resources.)
	 does not allows to add settings in any project.
	 does not allows to create deployments in any project.
	 does not allows to list members in any project.
	 does not allows to add members in any project.
	 does not does not allow to remove members in any project.
	 does not allow to update or delete existing setting or deployment in any project.
assign-create-project:
	 allows to assign/revoke create-project permissions to any user.
update-project:
	 allows to add new resources and update existing resources in a specific project for which permission is being given.
	 allows to update project details in that project.
	 allows to add/update any/all settings in that project.
	 allows to add/update any/all deployments in that project.
	 allows to add members in that project.
	 does not allows to delete/remove existing members, existing settings, existing deployments in that project.
assign-update-project:
	 allows to assign/revoke update-project permissions to any user.
	 can be assigned only for project for which assigning user has assign-update-project.
read-project:
	 allows to read any resource which is part of that project including project itself. (setting, members, deployments.)
	 allows to get/read project details of that project.
	 allows to fetch list of members in that project.
	 allows to read settings in that project.
	 allows to read deployments in that project.
	 allows to read any users current permission in that project.
assign-read-project:
	 allows to assign/revoke read-project permissions to any user.
	 can be assigned only for project for which assigning user has assign-read-project.
delete-project:
	 allows to delete any resource part of that project including project itself. (setting, members, deployments.)
	 allows to delete specific project,
	 allows to delete any/all settings in that project,
	 allows to delete any/all deployments in that project.
	 does not allows to read user details or list all users. (requires read permission to fetch that resource or user will have to provide manually.)
assign-delete-project:
	 allows to assign/revoke delete-project permissions to any user.
	 can be assigned only for project for which assigning user has assign-delete-project.


create does not allow updates, read or delete in any project, only project can be created.
update does not allow read, delete in any project, only updates to existing resources and adding new resources inside that project is allowed.
update permission will only allow updates to that resource, delete permission will only to delete that resource/project.
list all resources/projects will return resources after filtering them, only those resources for which user has read permission will be returned if user does not have read permission on any resource, list will return empty list of resources.
to delete project when user does not have read permission on that project, UI should allow taking project name as input in textbox instead of showing list of projects, as list will be empty or will not show that project due to missing read permission.

question:
what view does user get if he has delete project permission but not read project permission,
can he see the list of all projects to select and delete?
answer:
user will not see any projects, ui should have option to enter project name to delete and delete button to delete resources in such scenarios.

question:
who should be able to check/list users permission for a project?
answer:
	user can check/list his permissions for any project.
	if user has project read permission can he check any users permission for that project?
		yes, he can list memebers and check permission of members.
		he can manually provide non member username and check permission for that user.
	if user has any assign permission in that project can he list members and check/list what permisions any member/user has on that project?
		No, he should have read permission on that project to do that.
		So effectively, user needs read permission along with assign permission to work from UI.

question:
who can list user details/ roles like before assigning new role need to see existing roles?
answer:
ROLE_USER_READER or ROLE_USER_ADMIN or ROLE_TENANT_ADMIN can list all details/roles of any user.


Assigning (assign and revoke) roles and permissions:
--------------------------------------------------------------
only users with ROLE_TENANT_ADMIN can assign/revoke roles to any user.
only users with ROLE_USER_ADMIN can assign/revoke roles to any user except ROLE_TENANT_ADMIN.
user should have ROLE_USER_READER or ROLE_USER_ADMIN or ROLE_TENANT_ADMIN to list all users and see what roles they have.

user should have permission "assign-permission-x" to assign associated permission "permission-x" or "assign-permission-x" to members or users.
user should have permission "assign-permission-x" to revoke associated permission "permission-x" or "assign-permission-x" from members or users.
Example: if user has  permission "assign-read-project" on project p1, user can assign/revoke "read-project" permission and "assign-read-project" permission to/from other users on project p1.
user should have "read-project" permission in that project to check/list any users(member or otherwise) any permission in that specific project.
without read-project user can assign if he has assign-permission but cannot list or check user's permissions.


Project Membership:
--------------------------------------------------------------
Each project can have members.
Each member may or may not have a permission assigned to it in that project.
Membership has no association with permissions.
So some members can exist which have no permissions in that project.
Membership is to keep a mapping between user and associated resource in this case project.
So projects can show which users are members in it.

Keeping membership associated with permissions has performance and other recursively complex issues, this was earlier incorporated and than removed for simplicity.
User who has update-project permission can add members to that project.
User who has delete-project permission can remove members to that project.
Adding or removing user as member from project does not change his permissions or roles.


List All Resources operation:
--------------------------------------------------------------
List all tenants can be only performed by user with ROLE_SUPER_ADMIN permission.

List all users with all details can be only performed by user with ROLE_TENANT_ADMIN or ROLE_USER_ADMIN or ROLE_USER_READER permission.

List all projects will filter projects and list based on whether user has read permission or not for that project, so only those projects will be listed for which user has read permission. (can be cached for improved performance.)

List all project settings in a project will be project wise listed and hence if user has read permission on project than he can list all settings in that project, we do not need to check each setting before listing as project id of all settings in one project will be same.

List all project deployments in a project will be project wise listed and hence if user has read permission on project than he can list all deployments in that project, we do not need to check each deployment before listing as project id of all deployments in one project will be same.

List all project members in a project can be done if user has read-project permissions assigned for that project.

List all permissions of a member/non member in a project can be done if user has read-project permissions assigned for that project or user is checking his own permissions in that project.

Scenario:
If ROLE_TENANT_ADMIN or ROLE_USER_ADMIN or ROLE_USER_READER permission is not present but user wants to assign permission x to a user, can he fetch all users for selecting user.
No: all users can be listed only when user has ROLE_TENANT_ADMIN or ROLE_USER_ADMIN or ROLE_USER_READER, UI needs to provide inputbox and not list in such scenarios.
Calling the Rest api will not be a issue as user needs to be manually provided instead of fetching all users and selecting one like in UI.


Multi Tenancy Overview:
--------------------------------------------------------------


