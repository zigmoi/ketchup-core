apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: ${makisuBuildImageTaskName}
spec:
  workspaces:
    - name: output
      description: The git repo will be cloned onto the volume backing this workspace
  params:
  - name: MAKISU_IMAGE
    description: The image on which builds will run
    default: gcr.io/uber-container-tools/makisu:v0.1.14
  - name: IMAGE_REGISTRY_URL
    description: Docker (any) registry url to store built image.
    default: kubernetes.docker.internal:5000
  - name: MAKISU_ARG_MODIFY_FS
    description: Makisu flag to toggle modifyfs.
    default: "true"
  - name: IMAGE_TAG
    description: Tag name for built image.
    default: kubernetes.docker.internal:5000/ketchup-demo-basicspringboot
  - name: MAKISU_CONTEXT_PATH
    description: Path where makisu will execute build.
    default: .
  - name: MAKISU_CACHE_REDIS_ADDR
    description: Address for redis cache to use for makisu image id kv pairs.
    default: my-release-redis-master.default.svc.cluster.local:6379
  - name: MAKISU_CACHE_REDIS_PASSWORD
    description: makisu cache redis password.
    default: 7s5toBWAzh

  steps:
  - name: build-and-push
    workingdir: $(workspaces.output.path)
    image: $(params.MAKISU_IMAGE)
    args:
    - build
    - --push=$(params.IMAGE_REGISTRY_URL)
    - --modifyfs=$(params.MAKISU_ARG_MODIFY_FS)
    - -t=$(params.IMAGE_TAG)
    - --file=/var/configmap/Dockerfile
    - --registry-config=/var/makisu-registry-secret/makisuConfig
    - --redis-cache-addr=$(params.MAKISU_CACHE_REDIS_ADDR)
    - --redis-cache-password=$(params.MAKISU_CACHE_REDIS_PASSWORD)
    - $(params.MAKISU_CONTEXT_PATH)
    volumeMounts:
      - name: secret-volume-makisu
        mountPath: /var/makisu-registry-secret
      - name: config-volume
        mountPath: /var/configmap
    securityContext:
      runAsUser: 0
  volumes:
    - name: secret-volume-makisu
      secret:
        secretName: ${makisuValuesSecretName}
    - name: config-volume
      configMap:
        name: ${appDockerFileConfigMapName}
